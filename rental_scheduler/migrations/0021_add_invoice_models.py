# Generated by Django 5.0.6 on 2025-08-27 22:12

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('rental_scheduler', '0020_alter_customer_options_customer_address_line1_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text='Unique invoice number (e.g., INV-2024-001)', max_length=50, unique=True)),
                ('invoice_date', models.DateField(default=django.utils.timezone.now, help_text='Date the invoice was created')),
                ('bill_to_name', models.CharField(blank=True, help_text='Name to bill (overrides job customer if provided)', max_length=200)),
                ('bill_to_address_line1', models.CharField(blank=True, help_text='Billing address line 1 (overrides job address if provided)', max_length=200)),
                ('bill_to_address_line2', models.CharField(blank=True, help_text='Billing address line 2 (overrides job address if provided)', max_length=200)),
                ('bill_to_city', models.CharField(blank=True, help_text='Billing city (overrides job city if provided)', max_length=100)),
                ('bill_to_state', models.CharField(blank=True, help_text='Billing state (overrides job state if provided)', max_length=2)),
                ('bill_to_postal_code', models.CharField(blank=True, help_text='Billing postal code (overrides job postal code if provided)', max_length=10)),
                ('bill_to_phone', models.CharField(blank=True, help_text='Billing phone (overrides job phone if provided)', max_length=20)),
                ('notes_public', models.TextField(blank=True, help_text='Notes visible to customer on invoice')),
                ('notes_private', models.TextField(blank=True, help_text='Internal notes not visible to customer')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Subtotal before tax', max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Tax rate as decimal (e.g., 0.0825 for 8.25%)', max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax amount', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount including tax', max_digits=10)),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-invoice_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, help_text='Item code or SKU', max_length=50)),
                ('description', models.CharField(help_text='Description of the item or service', max_length=255)),
                ('qty', models.DecimalField(decimal_places=2, help_text='Quantity', max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, help_text='Unit price', max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, help_text='Line total (qty * price)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice Line',
                'verbose_name_plural': 'Invoice Lines',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='scheduled', help_text='Current status of the job', max_length=20)),
                ('business_name', models.CharField(blank=True, help_text='Business name (overrides customer business name if different)', max_length=200)),
                ('contact_name', models.CharField(blank=True, help_text='Contact person name (overrides customer contact name if different)', max_length=100)),
                ('phone', models.CharField(blank=True, help_text='Contact phone (overrides customer phone if different)', max_length=20)),
                ('address_line1', models.CharField(blank=True, help_text='Address line 1 (overrides customer address if different)', max_length=200)),
                ('address_line2', models.CharField(blank=True, help_text='Address line 2 (overrides customer address if different)', max_length=200)),
                ('city', models.CharField(blank=True, help_text='City (overrides customer city if different)', max_length=100)),
                ('state', models.CharField(blank=True, help_text='State (overrides customer state if different)', max_length=2)),
                ('postal_code', models.CharField(blank=True, help_text='Postal code (overrides customer postal code if different)', max_length=10)),
                ('date_call_received', models.DateTimeField(blank=True, help_text='Date and time the initial call was received', null=True)),
                ('start_dt', models.DateTimeField(help_text='Start date and time of the job')),
                ('end_dt', models.DateTimeField(help_text='End date and time of the job')),
                ('all_day', models.BooleanField(default=False, help_text='Whether this is an all-day event')),
                ('repeat_type', models.CharField(choices=[('none', 'None'), ('annual', 'Annual'), ('every_n_months', 'Every N Months')], default='none', help_text='Type of repeat for recurring jobs', max_length=20)),
                ('repeat_n_months', models.PositiveIntegerField(blank=True, help_text="Number of months between repeats (for 'Every N Months' type)", null=True)),
                ('repair_notes', models.TextField(blank=True, help_text='Detailed notes about the repair work needed')),
                ('trailer_color_overwrite', models.CharField(blank=True, help_text='Override trailer color for calendar display (CSS hex code)', max_length=7)),
                ('quote_text', models.TextField(blank=True, help_text='Quote text for customer-facing documents')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ['-start_dt'],
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wo_number', models.CharField(help_text='Unique work order number (e.g., WO-2024-001)', max_length=20, unique=True)),
                ('wo_date', models.DateField(default=django.utils.timezone.now, help_text='Date the work order was created')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the work order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Work Order',
                'verbose_name_plural': 'Work Orders',
                'ordering': ['-wo_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, help_text='Item code or part number', max_length=50)),
                ('description', models.CharField(help_text='Description of the work or item', max_length=200)),
                ('qty', models.DecimalField(decimal_places=2, default=1.0, help_text='Quantity of the item or hours of work', max_digits=10)),
                ('rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Rate per unit (price per item or hourly rate)', max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount for this line (qty * rate)', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Work Order Line',
                'verbose_name_plural': 'Work Order Lines',
                'ordering': ['created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='trailer',
            options={'ordering': ['number']},
        ),
        migrations.AddField(
            model_name='trailer',
            name='color',
            field=models.CharField(blank=True, help_text='Trailer color for identification', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='trailer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='trailer',
            name='customer',
            field=models.ForeignKey(blank=True, help_text='Customer who owns this trailer (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='rental_scheduler.customer'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='description',
            field=models.CharField(blank=True, help_text='Freeform description of trailer features or condition', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='trailer',
            name='height',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Height in feet', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='trailer',
            name='is_rental_trailer',
            field=models.BooleanField(default=True, help_text='Whether this trailer is available for rental (vs customer-owned)'),
        ),
        migrations.AddField(
            model_name='trailer',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about the trailer', null=True),
        ),
        migrations.AddField(
            model_name='trailer',
            name='serial_number',
            field=models.CharField(blank=True, help_text='Manufacturer serial number', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='trailer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='trailer',
            name='daily_rate',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Rate charged for full-day rental', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='trailer',
            name='half_day_rate',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Rate charged for half-day rental', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='trailer',
            name='weekly_rate',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Rate charged for weekly rental', max_digits=10, null=True),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['number'], name='rental_sche_number_81a372_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['serial_number'], name='rental_sche_serial__b936cd_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['color'], name='rental_sche_color_b5fc38_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['customer'], name='rental_sche_custome_8b5b20_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['is_available'], name='rental_sche_is_avai_3e3cb6_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['is_rental_trailer'], name='rental_sche_is_rent_8124bd_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['category', 'is_available'], name='rental_sche_categor_883928_idx'),
        ),
        migrations.AddIndex(
            model_name='trailer',
            index=models.Index(fields=['customer', 'is_rental_trailer'], name='rental_sche_custome_05bec9_idx'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='updated_by',
            field=models.ForeignKey(help_text='User who last updated this invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_invoices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoiceline',
            name='invoice',
            field=models.ForeignKey(help_text='Invoice this line belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='rental_scheduler.invoice'),
        ),
        migrations.AddField(
            model_name='job',
            name='calendar',
            field=models.ForeignKey(help_text="Calendar this job belongs to (e.g., 'Shop', 'Mobile Unit A')", on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='rental_scheduler.calendar'),
        ),
        migrations.AddField(
            model_name='job',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this job', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='job',
            name='customer',
            field=models.ForeignKey(help_text='Customer requesting the work', on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='rental_scheduler.customer'),
        ),
        migrations.AddField(
            model_name='job',
            name='trailer',
            field=models.ForeignKey(help_text='Trailer being worked on or rented', on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='rental_scheduler.trailer'),
        ),
        migrations.AddField(
            model_name='job',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this job', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='job',
            field=models.ForeignKey(help_text='Job this invoice is for', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='rental_scheduler.job'),
        ),
        migrations.AddField(
            model_name='workorder',
            name='job',
            field=models.OneToOneField(help_text='Associated job for this work order', on_delete=django.db.models.deletion.CASCADE, related_name='work_order', to='rental_scheduler.job'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='work_order',
            field=models.ForeignKey(blank=True, help_text='Work order this invoice is based on (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='rental_scheduler.workorder'),
        ),
        migrations.AddField(
            model_name='workorderline',
            name='work_order',
            field=models.ForeignKey(help_text='Work order this line belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='rental_scheduler.workorder'),
        ),
        migrations.AddIndex(
            model_name='invoiceline',
            index=models.Index(fields=['invoice'], name='rental_sche_invoice_f5f204_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceline',
            index=models.Index(fields=['item_code'], name='rental_sche_item_co_1f1553_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceline',
            index=models.Index(fields=['created_at'], name='rental_sche_created_4b3e60_idx'),
        ),
        migrations.AddConstraint(
            model_name='invoiceline',
            constraint=models.CheckConstraint(check=models.Q(('qty__gt', 0)), name='invoice_line_positive_qty'),
        ),
        migrations.AddConstraint(
            model_name='invoiceline',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='invoice_line_non_negative_price'),
        ),
        migrations.AddConstraint(
            model_name='invoiceline',
            constraint=models.CheckConstraint(check=models.Q(('total__gte', 0)), name='invoice_line_non_negative_total'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['calendar', 'status'], name='rental_sche_calenda_283477_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['customer', 'status'], name='rental_sche_custome_82a1c7_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['trailer', 'status'], name='rental_sche_trailer_84eb26_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['start_dt', 'end_dt'], name='rental_sche_start_d_9bb2cd_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['status', 'start_dt'], name='rental_sche_status_c8a038_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['is_deleted'], name='rental_sche_is_dele_8ab1dd_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['repeat_type'], name='rental_sche_repeat__98a806_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['wo_number'], name='rental_sche_wo_numb_276885_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['wo_date'], name='rental_sche_wo_date_5c6729_idx'),
        ),
        migrations.AddIndex(
            model_name='workorder',
            index=models.Index(fields=['job'], name='rental_sche_job_id_d33bd5_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='rental_sche_invoice_ae7d1b_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='rental_sche_invoice_60536f_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['job'], name='rental_sche_job_id_1dc16c_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['work_order'], name='rental_sche_work_or_014a61_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['is_deleted'], name='rental_sche_is_dele_11f45d_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['created_at'], name='rental_sche_created_f27e6d_idx'),
        ),
        migrations.AddIndex(
            model_name='workorderline',
            index=models.Index(fields=['work_order'], name='rental_sche_work_or_96a1ae_idx'),
        ),
        migrations.AddIndex(
            model_name='workorderline',
            index=models.Index(fields=['item_code'], name='rental_sche_item_co_b0de85_idx'),
        ),
        migrations.AddIndex(
            model_name='workorderline',
            index=models.Index(fields=['description'], name='rental_sche_descrip_bbf6ca_idx'),
        ),
        migrations.AddConstraint(
            model_name='workorderline',
            constraint=models.CheckConstraint(check=models.Q(('qty__gte', 0)), name='work_order_line_qty_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='workorderline',
            constraint=models.CheckConstraint(check=models.Q(('rate__gte', 0)), name='work_order_line_rate_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='workorderline',
            constraint=models.CheckConstraint(check=models.Q(('total__gte', 0)), name='work_order_line_total_non_negative'),
        ),
    ]
